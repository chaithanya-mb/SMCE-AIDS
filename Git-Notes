GIT : 
=====
Global Information Tracker

It is a Version Control System (VCS) or 
It is a Source Code Management (SCM).

It will keep the Source Code seperately for each version.

index.html

V-1	: 100 Lines ---> Store (Repo-1)
V-2	: 200 Lines ---> Store (Repo-2)
V-3	: 300 Lines ---> Store (Repo-3)

REPO or REPOSITORY:
-> It is a Folder where we can store our Source Code.

GIT:
----
-> Git is used to track the files.
-> It will maintain multiple versions of the same file.
-> It is platform-independent.
-> It is free and open-source.
-> They can handle large projects efficiently
-> It is 3rd generation of VCS.
-> It is written on C Programming Language.
-> It is Invented by Linus Torvalds.
-> It came on the year 2005.

example: 
index.html	-> It is a basic file for every application.

V1 ----> index.html
V2 ----> index.html
V3 ----> index.html


Version Control System:
-----------------------
1) This is the process of maintaining multiple versions of the code
All the team members upload their code(check in) into the remote
version controlling system. The VCS accepts the code uploads from 
multiple team members and integrates it so that when the other
team members download the code they will be able to see the entire
work done by the team

2) VCS's also preserve older and later versions of the code so that
at any time we can switch between which ever version we want

3) VCS's also keep a track of who is making what kind of changes


VCS: 

	CVCS: Centralized Version Controlling System
		SVN - It can store code on a Single Repo.
	DVCS: Distributed Version Controlling System
		GIT - It can store code on a Multiple Repo.


CVCS: Centralized Version Controlling System

Here we have a remote server(code repository) into which all the team 
members check in the code and all the features of version controlling
are implemented in this remote server

DVCS: Distributed Version Controlling System

Here we have a local repository installed on every team members machines
where version controlling happens at the level of individual team members
form where it is uploaded into a remote server where version controlling 
happens for the entire team


Roll Back:
----------
Going back to Previous Version of Application.


Setting up git on Windows
-------------------------------
1) Download git from
	https://git-scm.com/downloads

2) Install it

3) Open gitbash and execute the git commands

----------------------------------------------------------------------
Configuring user and email globally for all users on a system
git config --global user.name "madhan gce"
git config --global user.email "madhangceb1@gmail.com"

----------------------------------------------------------------------
Git Stages / Git Architecture
On the local machine git uses three sections
1. Working Directory 
2. Stagging Area
3. Local Repository


1. Working Directory: Where we write our source code.
Working directory is the location where all the code is created
Initially all the files present here are called as untracked files

2. Stagging Area: we track files here.
Stagging area is the location where file indexing happens and it 
is the buffer area of git and the files are called as indexed files

3. Local Repository: where we store tracked source code.
Local repository is where version controlling happens and the files
are called as committed files

--------------------------------------------
Working with GIT or Basic Commands of GIT:
--------------------------------------------

1. To initialize the working directory to accept 
git commands. 
Open "Git Bash" cd Path_of_Working_Dir

	git init

The above command will create a hidden folder called .git
where it stores some configuration files for maintaining the local repository.

2. To send file from working dir to stagging area

	git add filename

   To send multiple files into stagging area

	git add file1 file2 file3

   To send all files and folders into the stagging area

	git add .

3. To unstage files 
( bring file back from stagging to untracked section )

	git rm --cached filename

	(or)

	git reset filename

4. To send files from stagging to local repository

	git commit -m "Some Commit Message"

5. To see the status of the untracked and stagging section

	git status

6. To see the total commits that are done in LR

	git log

   To see the commit history in a simplified format

	git log --oneline

-----------------------------------------------------
.gitignore

This is a special file where we can store the private filenames. 
Any filename that is mentioned in .gitignore will not longer be accessed by git

1. Create few files

	touch file1 file2 file3 file4

2. Check the status of git

	git status

   It will show all the above 4 files as untracked file

3. Create a hidden file .gitignore and enter the above filenames

	cat >.gitignore
	file1
	file2
	file3
	file4

   To come out of cat command press ctrl+d (EOF)

4. Check the status of git

	git status

   It will no longer show the above created four files as untracked 

-------------------------------------------------------------------------------
